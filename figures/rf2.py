import numpy as np
from pyx import canvas, color, deco, graph, path, style, text, trafo, unit

data1 = [(0.01398, 0.26819), (0.2357, 0.275711), (0.51285, 0.223067), (0.73457, 0.270697), (1.01172, 0.350916),
         (1.23344, 0.416094), (1.51059, 0.483779), (1.77388, 0.566505), (2.00946, 0.621656), (2.25889, 0.711903),
         (2.50833, 0.706889), (2.75777, 0.671793), (3.0072, 0.596588), (3.25664, 0.561492), (3.50607, 0.466231),
         (3.75551, 0.343396), (4.00494, 0.338382), (4.25437, 0.240615), (4.50381, 0.195492), (4.75324, 0.280724),
         (5.00268, 0.258163), (5.25211, 0.325848), (5.50155, 0.463724), (5.75099, 0.49882), (6.00042, 0.594081),
         (6.24986, 0.624163), (6.49929, 0.691848), (6.74873, 0.694355), (6.99816, 0.709396), (7.2476, 0.659259),
         (7.49703, 0.619149), (7.74647, 0.481272), (7.9959, 0.413587), (8.24534, 0.31582), (8.49477, 0.26819),
         (8.7442, 0.270697), (8.99364, 0.255656), (9.24307, 0.318327), (9.49251, 0.380998), (9.74194, 0.471245),
         (9.99138, 0.461218)]
data2 = [(0.01398, 0.556308), (0.2357, 0.513685), (0.51285, 0.438467), (0.73457, 0.400859), (1.01172, 0.403366),
         (1.23344, 0.350714), (1.51059, 0.33567), (1.76002, 0.350714), (2.00946, 0.345699), (2.25889, 0.443482),
         (2.50833, 0.438467), (2.75777, 0.478583), (3.0072, 0.561322), (3.25664, 0.56383), (3.50607, 0.591409),
         (3.75551, 0.588902), (4.00494, 0.606453), (4.25437, 0.561322), (4.50381, 0.516192), (4.75324, 0.478583),
         (5.00268, 0.420916), (5.25211, 0.388322), (5.50155, 0.350714), (5.75099, 0.378293), (6.00042, 0.343192),
         (6.24986, 0.345699), (6.49929, 0.385815), (6.74873, 0.403366), (6.99816, 0.453511), (7.2476, 0.528728),
         (7.49703, 0.538757), (7.74647, 0.598931), (7.9959, 0.646569), (8.24534, 0.603946), (8.49477, 0.568844),
         (8.7442, 0.491119), (8.99364, 0.518699), (9.24307, 0.428438), (9.49251, 0.405873), (9.74194, 0.383308),
         (9.99138, 0.458525)]
data3 = [(0.0, 0.464688), (0.2357, 0.372769), (0.45742, 0.428477), (0.73457, 0.400623), (0.95629, 0.447975),
         (1.21958, 0.489756), (1.45516, 0.450761), (1.71845, 0.484185), (1.98175, 0.473044), (2.23118, 0.523181),
         (2.48062, 0.486971), (2.73005, 0.403409), (2.97949, 0.573318), (3.22892, 0.551035), (3.4645, 0.506469),
         (3.72779, 0.556606), (3.96337, 0.528752), (4.22666, 0.514825), (4.46224, 0.503683), (4.72553, 0.484185),
         (4.97497, 0.489756), (5.2244, 0.551035), (5.47383, 0.478615), (5.72327, 0.4814), (5.9727, 0.506469),
         (6.22214, 0.44519), (6.47157, 0.478615), (6.72101, 0.534323), (6.97044, 0.539893), (7.21988, 0.467473),
         (7.46931, 0.456331), (7.71875, 0.503683), (7.96819, 0.486971), (8.21762, 0.431263), (8.46706, 0.500898),
         (8.71649, 0.573318), (8.96593, 0.484185), (9.21536, 0.450761), (9.4648, 0.478615), (9.71423, 0.464688),
         (9.96367, 0.464688)]

unit.set(wscale=1.3, xscale=0.85)
text.set(text.LatexRunner, texenc="utf-8")
text.preamble(r"""\usepackage{helvet}
                  \usepackage[T1]{fontenc}
                  \renewcommand\familydefault{\sfdefault}""")

fcolor = color.grey(0.7)
c = canvas.canvas()
x = np.linspace(0, 10, 200)
xscale = 0.6
yscale = 4
for f, data, yshift in ((lambda x: 0.47-0.227397*np.sin(1.460938*x+1.1632), data1,  8),
                        (lambda x: 0.47138-0.12492*np.sin(1.4621*x-0.72706), data2, 4),
                        (lambda x: 0.47698-0.01151*np.sin(1.4659*x+0.5463), data3, 0)):
    y = f(x)
    p = path.path(path.moveto(xscale*x[0], yshift+yscale*y[0]))
    for xp, yp in zip(x[1:], y[1:]):
        p.append(path.lineto(xscale*xp, yshift+yscale*yp))
    c.stroke(p, [fcolor])
    for xp, yp in data:
        xp = xscale*xp
        yp = yshift+yscale*yp
        graph.style._squaresymbol(c, unit.topt(xp), unit.topt(yp), unit.topt(0.15), [deco.stroked()])
c.stroke(path.rect(0, 0, 6, 4))
c.stroke(path.rect(0, 4, 6, 4))
c.stroke(path.rect(0, 8, 6, 4))
c.stroke(path.line(0, 4, -0.1, 4))
c.text(-0.2, 4, '0', [text.halign.right, text.valign.middle])
c.text(-0.2, 8, '1', [text.halign.right, text.valign.middle])
c.text(3, -0.2, 'Frequenzdifferenz', [text.halign.center, text.valign.top])
c.text(-0.5, 6, 'Anteil des unteren Zustands', [text.halign.center, trafo.rotate(90)])
lightgrey = color.grey(0.7)
darkgrey = color.grey(0.3)
for yoff, x, y in ((10, 68.7, 7.5),
                   (6, 67.3, 14.9),
                   (2, 54.2, 42.7)):
    c.stroke(path.path(path.moveto(6.5+x*0.02, yoff+y*0.02),
                       path.lineto(6.5, yoff),
                       path.lineto(6.5+x*0.02, yoff-y*0.02)),
             [style.linewidth.Thick, style.linejoin.round])
    c.fill(path.circle(6.5+x*0.02, yoff+y*0.02, 0.48), [lightgrey])
    c.fill(path.circle(6.5+x*0.02, yoff-y*0.02, 0.48), [darkgrey])
c.writePDFfile()
